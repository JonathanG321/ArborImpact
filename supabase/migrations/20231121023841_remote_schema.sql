alter table "public"."profiles" drop constraint "profiles_balance_check";

create table "public"."profile_sdgs" (
    "profile_id" uuid not null,
    "sdg_id" text not null
);


alter table "public"."profile_sdgs" enable row level security;

create table "public"."recharges" (
    "id" bigint generated by default as identity not null,
    "profile_id" uuid not null default auth.uid(),
    "amount" double precision not null default '0'::double precision,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."recharges" enable row level security;

create table "public"."sdgs" (
    "id" text not null default ''::text
);


alter table "public"."sdgs" enable row level security;

alter table "public"."donations" drop column "donation";

alter table "public"."donations" add column "amount" double precision not null default '0'::double precision;

alter table "public"."profiles" drop column "balance";

alter table "public"."profiles" drop column "sdg";

alter table "public"."projects" alter column "sdg" set default 'SDG01'::text;

CREATE UNIQUE INDEX profile_sdgs_pkey ON public.profile_sdgs USING btree (profile_id, sdg_id);

CREATE UNIQUE INDEX recharges_pkey ON public.recharges USING btree (id);

CREATE UNIQUE INDEX sdgs_pkey ON public.sdgs USING btree (id);

alter table "public"."profile_sdgs" add constraint "profile_sdgs_pkey" PRIMARY KEY using index "profile_sdgs_pkey";

alter table "public"."recharges" add constraint "recharges_pkey" PRIMARY KEY using index "recharges_pkey";

alter table "public"."sdgs" add constraint "sdgs_pkey" PRIMARY KEY using index "sdgs_pkey";

alter table "public"."profile_sdgs" add constraint "profile_sdgs_profile_id_fkey" FOREIGN KEY (profile_id) REFERENCES profiles(id) not valid;

alter table "public"."profile_sdgs" validate constraint "profile_sdgs_profile_id_fkey";

alter table "public"."profile_sdgs" add constraint "profile_sdgs_sdg_id_fkey" FOREIGN KEY (sdg_id) REFERENCES sdgs(id) not valid;

alter table "public"."profile_sdgs" validate constraint "profile_sdgs_sdg_id_fkey";

alter table "public"."projects" add constraint "projects_sdg_fkey" FOREIGN KEY (sdg) REFERENCES sdgs(id) not valid;

alter table "public"."projects" validate constraint "projects_sdg_fkey";

alter table "public"."recharges" add constraint "recharges_profile_id_fkey" FOREIGN KEY (profile_id) REFERENCES profiles(id) not valid;

alter table "public"."recharges" validate constraint "recharges_profile_id_fkey";

set check_function_bodies = off;

create policy "Enable view for users based on profile_id"
on "public"."profile_sdgs"
as permissive
for select
to public
using ((auth.uid() = profile_id));


create policy "Enable view for users based on profile_id"
on "public"."recharges"
as permissive
for select
to public
using ((auth.uid() = profile_id));


create policy "Enable read access for all users"
on "public"."sdgs"
as permissive
for select
to public
using (true);



